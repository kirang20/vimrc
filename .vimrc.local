let g:airline_powerline_fonts = 1
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'component': {
      \   'readonly': '%{&readonly?"⭤":""}',
      \ },
      \ 'separator': { 'left': '⮀', 'right': '⮂' },
      \ 'subseparator': { 'left': '⮁', 'right': '⮃' }
      \ }
let g:go_bin_path = "/Users/kiran/.vim-go"

set nolist
let g:indent_guides_enable_on_vim_startup=0
hi Normal ctermbg=NONE

nnoremap <C-e>  :NERDTreeToggle<CR>
inoremap <C-e>  <Esc>:NERDTreeToggle<CR>
nnoremap <C-b>  :CtrlPBuffer<CR>
inoremap <C-b>  <Esc>:CtrlPBuffer<CR>

set cursorline                  " Highlight current line
highlight clear SignColumn 

let g:go_fmt_command = "goimports"

let g:go_bin_path = expand("~/.vim-go")

au FileType go nmap <Leader>do <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)

au FileType go nmap gd <Plug>(go-def)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)

au FileType go nmap <Leader>e <Plug>(go-rename)

let g:ctrlp_match_window = 'top,order:ttb,min:1,max:20,results:20'
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gc :Gcommit<CR>
nnoremap <Leader>gd :Gdiff<CR>

" ===============Kiran's Customisations====================

" Toggle paste indentation help
set pastetoggle=<F2>

" Window management <leader>-h, <leader>-k, <leader>-j, <leader>-l
function! WinMove(key) 
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr()) "we havent moved
    if (match(a:key,'[jk]')) "were we going up/down
      wincmd v
    else 
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction
 
map <leader>h              :call WinMove('h')<cr>
map <leader>k              :call WinMove('k')<cr>
map <leader>l              :call WinMove('l')<cr>
map <leader>j              :call WinMove('j')<cr>

" Window close
map <leader>wc :wincmd q<cr>

" Window rotate 
map <leader>wr <C-W>r

" Window move using <leader>-H, <leader>-K, <leader>-J, <leader>-L 
map <leader>H              :wincmd H<cr>
map <leader>K              :wincmd K<cr>
map <leader>L              :wincmd L<cr>
map <leader>J              :wincmd J<cr>
